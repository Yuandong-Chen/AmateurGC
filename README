1.How to use it?
Testing environment: Ubuntu 12.04.5

Suppose you write a program like this one:

#include <...>

int main()
{
	...
	void *hatetofree = (void *)malloc(...);

	...

	free(hatetofree);

	return 0;
}

then transfer it into the following:

#include "interface3.h"
#include <...>

int main()
{
	__gc_init(); /* to init gc */
	...
	void *hatetofree = (void *)gc_calloc(...);

	...

	/* please forget free(hatetofree); */

	__gc_exit(); /* to destroy gc */
	return 0;
}

Our garbage collector will help you take care of it.

More examples, please see file "example.c"(test __gc_calloc throughput) and "snake.c"(a terminal game)
> make; ./example; ./snake;

2.Warning:
Space Limits: ONLY 40M*0.75=30M effective memory unless MAX_HEAP value in file "freeheap.h" and MAX_VOLUME in "interface3.h" are changed.
Only support 0 up to 400,000 allocated pointers unless Space Limits is enlarged.
DO NOT support multi-thread programs yet. gc_lock is unimplemented in file "interface3.h".
Conservative C collector.
